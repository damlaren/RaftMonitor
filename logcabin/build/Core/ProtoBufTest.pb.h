// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: build/Core/ProtoBufTest.proto

#ifndef PROTOBUF_build_2fCore_2fProtoBufTest_2eproto__INCLUDED
#define PROTOBUF_build_2fCore_2fProtoBufTest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace LogCabin {
namespace ProtoBuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_build_2fCore_2fProtoBufTest_2eproto();
void protobuf_AssignDesc_build_2fCore_2fProtoBufTest_2eproto();
void protobuf_ShutdownFile_build_2fCore_2fProtoBufTest_2eproto();

class TestMessage;

// ===================================================================

class TestMessage : public ::google::protobuf::Message {
 public:
  TestMessage();
  virtual ~TestMessage();

  TestMessage(const TestMessage& from);

  inline TestMessage& operator=(const TestMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestMessage& default_instance();

  void Swap(TestMessage* other);

  // implements Message ----------------------------------------------

  TestMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestMessage& from);
  void MergeFrom(const TestMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 field_a = 1;
  inline bool has_field_a() const;
  inline void clear_field_a();
  static const int kFieldAFieldNumber = 1;
  inline ::google::protobuf::uint64 field_a() const;
  inline void set_field_a(::google::protobuf::uint64 value);

  // required uint64 field_b = 2;
  inline bool has_field_b() const;
  inline void clear_field_b();
  static const int kFieldBFieldNumber = 2;
  inline ::google::protobuf::uint64 field_b() const;
  inline void set_field_b(::google::protobuf::uint64 value);

  // repeated uint64 field_c = 3;
  inline int field_c_size() const;
  inline void clear_field_c();
  static const int kFieldCFieldNumber = 3;
  inline ::google::protobuf::uint64 field_c(int index) const;
  inline void set_field_c(int index, ::google::protobuf::uint64 value);
  inline void add_field_c(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      field_c() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_field_c();

  // optional bytes field_d = 4;
  inline bool has_field_d() const;
  inline void clear_field_d();
  static const int kFieldDFieldNumber = 4;
  inline const ::std::string& field_d() const;
  inline void set_field_d(const ::std::string& value);
  inline void set_field_d(const char* value);
  inline void set_field_d(const void* value, size_t size);
  inline ::std::string* mutable_field_d();
  inline ::std::string* release_field_d();
  inline void set_allocated_field_d(::std::string* field_d);

  // @@protoc_insertion_point(class_scope:LogCabin.ProtoBuf.TestMessage)
 private:
  inline void set_has_field_a();
  inline void clear_has_field_a();
  inline void set_has_field_b();
  inline void clear_has_field_b();
  inline void set_has_field_d();
  inline void clear_has_field_d();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 field_a_;
  ::google::protobuf::uint64 field_b_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > field_c_;
  ::std::string* field_d_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_build_2fCore_2fProtoBufTest_2eproto();
  friend void protobuf_AssignDesc_build_2fCore_2fProtoBufTest_2eproto();
  friend void protobuf_ShutdownFile_build_2fCore_2fProtoBufTest_2eproto();

  void InitAsDefaultInstance();
  static TestMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// TestMessage

// required uint64 field_a = 1;
inline bool TestMessage::has_field_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestMessage::set_has_field_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestMessage::clear_has_field_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestMessage::clear_field_a() {
  field_a_ = GOOGLE_ULONGLONG(0);
  clear_has_field_a();
}
inline ::google::protobuf::uint64 TestMessage::field_a() const {
  return field_a_;
}
inline void TestMessage::set_field_a(::google::protobuf::uint64 value) {
  set_has_field_a();
  field_a_ = value;
}

// required uint64 field_b = 2;
inline bool TestMessage::has_field_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TestMessage::set_has_field_b() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TestMessage::clear_has_field_b() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TestMessage::clear_field_b() {
  field_b_ = GOOGLE_ULONGLONG(0);
  clear_has_field_b();
}
inline ::google::protobuf::uint64 TestMessage::field_b() const {
  return field_b_;
}
inline void TestMessage::set_field_b(::google::protobuf::uint64 value) {
  set_has_field_b();
  field_b_ = value;
}

// repeated uint64 field_c = 3;
inline int TestMessage::field_c_size() const {
  return field_c_.size();
}
inline void TestMessage::clear_field_c() {
  field_c_.Clear();
}
inline ::google::protobuf::uint64 TestMessage::field_c(int index) const {
  return field_c_.Get(index);
}
inline void TestMessage::set_field_c(int index, ::google::protobuf::uint64 value) {
  field_c_.Set(index, value);
}
inline void TestMessage::add_field_c(::google::protobuf::uint64 value) {
  field_c_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestMessage::field_c() const {
  return field_c_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestMessage::mutable_field_c() {
  return &field_c_;
}

// optional bytes field_d = 4;
inline bool TestMessage::has_field_d() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TestMessage::set_has_field_d() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TestMessage::clear_has_field_d() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TestMessage::clear_field_d() {
  if (field_d_ != &::google::protobuf::internal::kEmptyString) {
    field_d_->clear();
  }
  clear_has_field_d();
}
inline const ::std::string& TestMessage::field_d() const {
  return *field_d_;
}
inline void TestMessage::set_field_d(const ::std::string& value) {
  set_has_field_d();
  if (field_d_ == &::google::protobuf::internal::kEmptyString) {
    field_d_ = new ::std::string;
  }
  field_d_->assign(value);
}
inline void TestMessage::set_field_d(const char* value) {
  set_has_field_d();
  if (field_d_ == &::google::protobuf::internal::kEmptyString) {
    field_d_ = new ::std::string;
  }
  field_d_->assign(value);
}
inline void TestMessage::set_field_d(const void* value, size_t size) {
  set_has_field_d();
  if (field_d_ == &::google::protobuf::internal::kEmptyString) {
    field_d_ = new ::std::string;
  }
  field_d_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TestMessage::mutable_field_d() {
  set_has_field_d();
  if (field_d_ == &::google::protobuf::internal::kEmptyString) {
    field_d_ = new ::std::string;
  }
  return field_d_;
}
inline ::std::string* TestMessage::release_field_d() {
  clear_has_field_d();
  if (field_d_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = field_d_;
    field_d_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TestMessage::set_allocated_field_d(::std::string* field_d) {
  if (field_d_ != &::google::protobuf::internal::kEmptyString) {
    delete field_d_;
  }
  if (field_d) {
    set_has_field_d();
    field_d_ = field_d;
  } else {
    clear_has_field_d();
    field_d_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf
}  // namespace LogCabin

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_build_2fCore_2fProtoBufTest_2eproto__INCLUDED
